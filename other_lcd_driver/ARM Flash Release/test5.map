Archive member included because of file (symbol)

C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
                              ARM Flash Release/test.o (ctl_task_init)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_arm.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o) (ctl_private_init_registers)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o)
                              ARM Flash Release/pcf8833u8_lcd.o (cos)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(sin.o)
                              ARM Flash Release/pcf8833u8_lcd.o (sin)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o) (__sincos)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__float64_infinity.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__float64_infinity)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(fabs.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (fabs)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__poly_eval.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__poly_eval)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int32_udivmod.o)
                              ARM Flash Release/test_AT91SAM7.o (__udivsi3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o)
                              ARM Flash Release/test.o (printf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(sprintf.o)
                              ARM Flash Release/test.o (sprintf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(abs.o)
                              ARM Flash Release/pcf8833u8_lcd.o (abs)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(srand.o)
                              ARM Flash Release/test.o (srand)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(rand.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(srand.o) (__rand_next)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubdf3.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o) (__subdf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubsf3.o)
                              ARM Flash Release/pcf8833u8_lcd.o (__subsf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_cmpdf2.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__gedf2)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixdfsi.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__fixdfsi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfsi.o)
                              ARM Flash Release/pcf8833u8_lcd.o (__fixunsdfsi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunssfsi.o)
                              ARM Flash Release/pcf8833u8_lcd.o (__fixunssfsi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivdf3.o)
                              ARM Flash Release/pcf8833u8_lcd.o (__muldf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivsf3.o)
                              ARM Flash Release/pcf8833u8_lcd.o (__divsf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_truncdfsf2.o)
                              ARM Flash Release/pcf8833u8_lcd.o (__truncdfsf2)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o) (__vfprintf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__errno)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_evt.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o) (ctl_events_wait)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(frexp.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (frexp)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(ldexp.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (ldexp)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isinf.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__isinf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isnan.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__isnan)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_umod.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__umoddi3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_udivmod.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__udivdi3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_cmp.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__cmpdi2)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(strlen.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (strlen)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__pow10)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__hex_lc_uc.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__hex_uc)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfdi.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__fixunsdfdi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_floatdidf.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__floatdidf)

Allocating common symbols
Common symbol       size              file

ctl_interrupt_count
                    0x1               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
task2_stack         0x408             ARM Flash Release/test.o
task2_task          0x20              ARM Flash Release/test.o
ctl_current_time    0x4               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
ctl_task_executing  0x4               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
idleCount           0x4               ARM Flash Release/test_AT91SAM7.o
somestring          0x19              ARM Flash Release/test.o
task1_stack         0x408             ARM Flash Release/test.o
task1_task          0x20              ARM Flash Release/test.o
main_task           0x20              ARM Flash Release/test.o
ctl_task_list       0x4               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
e1                  0x4               ARM Flash Release/test.o

Memory Configuration

Name             Origin             Length             Attributes
User_Peripherals 0xf0000000         0x0fff0000         xw
System_Controller 0xfffff000         0x00000000         xw
SRAM             0x00200000         0x00004000         xw
FLASH            0x00100000         0x00010000         xr
*default*        0x00000000         0xffffffff

Linker script and memory map

                0xf0000000                __User_Peripherals_segment_start__ = 0xf0000000
                0xffff0000                __User_Peripherals_segment_end__ = 0xffff0000
                0xfffff000                __System_Controller_segment_start__ = 0xfffff000
                0xfffff000                __System_Controller_segment_end__ = 0xfffff000
                0x00200000                __SRAM_segment_start__ = 0x200000
                0x00204000                __SRAM_segment_end__ = 0x204000
                0x00100000                __FLASH_segment_start__ = 0x100000
                0x00110000                __FLASH_segment_end__ = 0x110000
                0x00000400                __STACKSIZE__ = 0x400
                0x00000100                __STACKSIZE_IRQ__ = 0x100
                0x00000100                __STACKSIZE_FIQ__ = 0x100
                0x00000000                __STACKSIZE_SVC__ = 0x0
                0x00000000                __STACKSIZE_ABT__ = 0x0
                0x00000000                __STACKSIZE_UND__ = 0x0
                0x00000400                __HEAPSIZE__ = 0x400

.vectors_ram    0x00200000       0x3c
                0x00200000                __vectors_ram_start__ = .
 *(.vectors_ram)
                0x0020003c                . = ((__vectors_ram_start__ + 0x3c) MAX_K .)
 *fill*         0x00200000       0x3c 00
                0x0020003c                __vectors_ram_end__ = (__vectors_ram_start__ + SIZEOF (.vectors_ram))
                0x00000001                . = ASSERT (((__vectors_ram_end__ >= __SRAM_segment_start__) && (__vectors_ram_end__ <= (__SRAM_segment_start__ + 0x4000))), .vectors_ram is too large to fit in SRAM memory segment)

.vectors        0x00100000       0x3c
                0x00100000                __vectors_start__ = .
 *(.vectors .vectors.*)
 .vectors       0x00100000       0x3c ARM Flash Release/AT91SAM7_Startup.o
                0x0010003c                __vectors_end__ = (__vectors_start__ + SIZEOF (.vectors))
                0x00000001                . = ASSERT (((__vectors_end__ >= __FLASH_segment_start__) && (__vectors_end__ <= (__FLASH_segment_start__ + 0x10000))), .vectors is too large to fit in FLASH memory segment)

.init           0x0010003c      0x274
                0x0010003c                __init_start__ = .
 *(.init .init.*)
 .init          0x0010003c      0x1e0 ARM Flash Release/crt0.o
                0x0010003c                __start
                0x0010003c                _start
 .init          0x0010021c       0x94 ARM Flash Release/AT91SAM7_Startup.o
                0x00100284                undef_handler
                0x0010028c                pabort_handler
                0x00100290                dabort_handler
                0x00100298                fiq_handler
                0x001002b0                __init_end__ = (__init_start__ + SIZEOF (.init))
                0x00000001                . = ASSERT (((__init_end__ >= __FLASH_segment_start__) && (__init_end__ <= (__FLASH_segment_start__ + 0x10000))), .init is too large to fit in FLASH memory segment)

.text_load      0x001002b0        0x0
                0x001002b0                __text_load_start__ = .
 *(.text_load)
                0x001002b0                __text_load_end__ = (__text_load_start__ + SIZEOF (.text_load))
                0x00000001                . = ASSERT (((__text_load_end__ >= __FLASH_segment_start__) && (__text_load_end__ <= (__FLASH_segment_start__ + 0x10000))), .text_load is too large to fit in FLASH memory segment)

.text           0x001002b0     0x6780
                0x001002b0                __text_start__ = .
 *(.text .text.* .glue_7t .glue_7 .gnu.linkonce.t.*)
 .text          0x001002b0      0x1bc ARM Flash Release/test_AT91SAM7EK.o
                0x001002b0                BoardInit
                0x0010032c                ProcessorClockFrequency
                0x001003c4                SetButtonPressedISR
 .text          0x0010046c      0x188 ARM Flash Release/test_AT91SAM7.o
                0x001005c8                Idle
                0x001004a4                SetTimerISR
                0x001005ac                TicksPerSecond
 .text          0x001005f4      0xbc4 ARM Flash Release/test.o
                0x001010b0                ctl_handle_error
                0x001010c8                main
                0x00100668                Task_2
                0x001005f4                Task_1
 .text          0x001011b8      0x208 ARM Flash Release/serial.o
                0x001012c0                UARTWriteChar
                0x00101390                __putchar
                0x00101318                UARTReadChar
                0x00101364                UARTReadAvailable
                0x001011b8                UARTInitialize
 .text          0x001013c0       0xb0 ARM Flash Release/spi.o
                0x001013c0                InitSPI
 .text          0x00101470     0x1644 ARM Flash Release/pcf8833u8_lcd.o
                0x001017f0                GotoXY
                0x00101b6c                LCD_Funct_B
                0x00101470                SendLcd
                0x00101798                LCD_Set_Resolution
                0x00101fa4                LCD_Circle
                0x00102238                LCD_Thick_Circle
                0x001029b8                ShowImage
                0x001019b8                LCD_Funct_A
                0x00101d20                LCD_Line
                0x00102684                LCD_String
                0x001014e4                InitLCD
                0x001018d4                LCD_Fill
                0x00102350                LCD_Circle_Line
                0x00101870                LCD_PixelPut
                0x00102870                ShowImage_4096
                0x00101e98                LCD_Box
 .text          0x00102ab4      0x268 ARM Flash Release/AT91SAM7.o
                0x00102c98                ctl_unmask_isr
                0x00102b08                ctl_set_isr
                0x00102ab4                irq_handler
                0x00102cd8                ctl_mask_isr
 .text          0x00102d1c      0x58c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
                0x00102fcc                ctl_task_remove
                0x00102e50                ctl_task_reschedule
                0x00103080                ctl_task_set_priority
                0x00102ed0                ctl_task_init
                0x0010312c                ctl_exit_isr
                0x001030c4                ctl_timeout_wait
                0x00102f7c                ctl_task_die
                0x0010327c                ctl_get_current_time
                0x00102ef4                ctl_task_run
                0x0010321c                ctl_increment_tick_from_isr
 .text          0x001032a8      0x20c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_arm.o)
                0x00103340                ctl_private_switch_context
                0x00103478                ctl_global_interrupts_re_enable_from_isr
                0x0010342c                ctl_global_interrupts_disable
                0x00103454                ctl_global_interrupts_set
                0x00103494                ctl_global_interrupts_un_re_enable_from_isr
                0x001033f0                ctl_private_isr_return
                0x00103404                ctl_global_interrupts_enable
                0x00103374                ctl_private_switch_isr_context
                0x00103304                swi_handler
                0x001032a8                ctl_private_init_registers
 .text          0x001034b4       0xd4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o)
                0x001034b4                cos
 .text          0x00103588       0xa4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(sin.o)
                0x00103588                sin
 .text          0x0010362c      0x1fc C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
                0x0010362c                __sincos
 .text          0x00103828       0x24 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(fabs.o)
                0x00103828                fabs
 .text          0x0010384c       0x60 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__poly_eval.o)
                0x0010384c                __poly_eval
 .text          0x001038ac       0x30 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int32_udivmod.o)
                0x001038ac                __int32_udiv
                0x001038ac                __int32_udivmod
                0x001038ac                __udivsi3
 .text          0x001038dc       0x5c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o)
                0x001038dc                printf
 .text          0x00103938       0x44 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(sprintf.o)
                0x00103938                sprintf
 .text          0x0010397c        0xc C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(abs.o)
                0x0010397c                abs
 .text          0x00103988       0x10 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(srand.o)
                0x00103988                srand
 .text          0x00103998       0x44 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(rand.o)
                0x00103998                rand
 .text          0x001039dc      0x3a8 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubdf3.o)
                0x00103d0c                __floatsidf
                0x00103d38                __extendsfdf2
                0x001039e0                __adddf3
                0x00103ce4                __floatunsidf
                0x001039dc                __subdf3
 .text          0x00103d84      0x218 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubsf3.o)
                0x00103d84                __subsf3
                0x00103f50                __floatsisf
                0x00103f48                __floatunsisf
                0x00103d88                __addsf3
 .text          0x00103f9c       0xb4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_cmpdf2.o)
                0x00103fac                __cmpdf2
                0x00103fac                __eqdf2
                0x00103f9c                __gtdf2
                0x00103fa4                __ltdf2
                0x00103fa4                __ledf2
                0x00103fac                __nedf2
                0x00103f9c                __gedf2
 .text          0x00104050       0x80 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixdfsi.o)
                0x00104050                __fixdfsi
 .text          0x001040d0       0x74 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfsi.o)
                0x001040d0                __fixunsdfsi
 .text          0x00104144       0x5c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunssfsi.o)
                0x00104144                __fixunssfsi
 .text          0x001041a0      0x4ec C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivdf3.o)
                0x00104418                __divdf3
                0x001041a0                __muldf3
 .text          0x0010468c      0x330 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivsf3.o)
                0x0010481c                __divsf3
                0x0010468c                __mulsf3
 .text          0x001049bc       0xf8 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_truncdfsf2.o)
                0x001049bc                __truncdfsf2
 .text          0x00104ab4     0x1740 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
                0x00104b80                __vfprintf
 .text          0x001061f4      0x194 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
                0x001061f4                __errno
                0x001062a0                __printf_unlock
                0x00106208                __heap_lock
                0x00106240                __heap_unlock
                0x00106300                __scanf_unlock
                0x00106268                __printf_lock
                0x00106328                __debug_io_lock
                0x00106360                __debug_io_unlock
                0x001062c8                __scanf_lock
 .text          0x00106388      0x1fc C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_evt.o)
                0x00106494                ctl_events_set_clear
                0x00106388                ctl_events_init
                0x001063b0                ctl_events_wait
 .text          0x00106584       0x94 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(frexp.o)
                0x00106584                frexp
 .text          0x00106618       0xc0 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(ldexp.o)
                0x00106618                ldexp
 .text          0x001066d8       0x40 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isinf.o)
                0x001066d8                __isinf
 .text          0x00106718       0x48 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isnan.o)
                0x00106718                __isnan
 .text          0x00106760       0x18 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_umod.o)
                0x00106760                __int64_umod
                0x00106760                __umoddi3
 .text          0x00106778       0x8c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_udivmod.o)
                0x00106778                __int64_udivmod
                0x00106778                __int64_udiv
                0x00106778                __udivdi3
 .text          0x00106804       0x24 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_cmp.o)
                0x00106804                __cmpdi2
                0x00106804                __int64_cmp
 .text          0x00106828       0x54 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(strlen.o)
                0x00106828                strlen
 .text          0x0010687c       0x94 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
                0x0010687c                __pow10
 .text          0x00106910       0x94 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfdi.o)
                0x00106910                __fixunsdfdi
 .text          0x001069a4       0x8c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_floatdidf.o)
                0x001069a4                __floatdidf
                0x00106a30                __text_end__ = (__text_start__ + SIZEOF (.text))
                0x00000001                . = ASSERT (((__text_end__ >= __FLASH_segment_start__) && (__text_end__ <= (__FLASH_segment_start__ + 0x10000))), .text is too large to fit in FLASH memory segment)

.dtors          0x00106a30        0x0
                0x00106a30                __dtors_start__ = .
 *(SORT(.dtors.*))
 *(.dtors)
                0x00106a30                __dtors_end__ = (__dtors_start__ + SIZEOF (.dtors))
                0x00000001                . = ASSERT (((__dtors_end__ >= __FLASH_segment_start__) && (__dtors_end__ <= (__FLASH_segment_start__ + 0x10000))), .dtors is too large to fit in FLASH memory segment)

.ctors          0x00106a30        0x0
                0x00106a30                __ctors_start__ = .
 *(SORT(.ctors.*))
 *(.ctors)
                0x00106a30                __ctors_end__ = (__ctors_start__ + SIZEOF (.ctors))
                0x00000001                . = ASSERT (((__ctors_end__ >= __FLASH_segment_start__) && (__ctors_end__ <= (__FLASH_segment_start__ + 0x10000))), .ctors is too large to fit in FLASH memory segment)

.rodata         0x00106a30     0x8c5c
                0x00106a30                __rodata_start__ = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00106a30       0x88 ARM Flash Release/test.o
 .rodata        0x00106ab8      0xc20 ARM Flash Release/fonts.o
                0x00106dc0                FONT8x8F
                0x001070c8                FONT8x16
                0x00106ab8                FONT6x8
 .rodata        0x001076d8     0x7e58 ARM Flash Release/Bitmap.o
                0x001076d8                smiley
                0x0010dcf2                sparkfun
 .rodata        0x0010f530       0x40 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
 .rodata        0x0010f570        0x8 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__float64_infinity.o)
                0x0010f570                __float64_infinity
 .rodata        0x0010f578       0x98 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
 .rodata.str1.4
                0x0010f610       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
                                 0x14 (size before relaxing)
 *fill*         0x0010f622        0x2 00
 .rodata        0x0010f624       0x48 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
 .rodata        0x0010f66c       0x20 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__hex_lc_uc.o)
                0x0010f66c                __hex_uc
                0x0010f67c                __hex_lc
                0x0010f68c                __rodata_end__ = (__rodata_start__ + SIZEOF (.rodata))
                0x00000001                . = ASSERT (((__rodata_end__ >= __FLASH_segment_start__) && (__rodata_end__ <= (__FLASH_segment_start__ + 0x10000))), .rodata is too large to fit in FLASH memory segment)
                0x0010f68c                __fast_load_start__ = (__rodata_end__ ALIGN 0x4)

.fast           0x0020003c        0x0 load address 0x0010f68c
                0x0020003c                __fast_start__ = .
 *(.fast .fast.*)
                0x0020003c                __fast_end__ = (__fast_start__ + SIZEOF (.fast))
                0x00000001                . = ASSERT ((((__fast_load_start__ + SIZEOF (.fast)) >= __FLASH_segment_start__) && ((__fast_load_start__ + SIZEOF (.fast)) <= (__FLASH_segment_start__ + 0x10000))), .fast is too large to fit in FLASH memory segment)

.fast_run       0x0020003c        0x0
                0x0020003c                __fast_run_start__ = .
                0x0020003c                . = ((__fast_run_start__ + SIZEOF (.fast)) MAX_K .)
                0x0020003c                __fast_run_end__ = (__fast_run_start__ + SIZEOF (.fast_run))
                0x00000001                . = ASSERT (((__fast_run_end__ >= __SRAM_segment_start__) && (__fast_run_end__ <= (__SRAM_segment_start__ + 0x4000))), .fast_run is too large to fit in SRAM memory segment)
                0x0010f68c                __data_load_start__ = ((__fast_load_start__ + SIZEOF (.fast)) ALIGN 0x4)

.data           0x0020003c        0x8 load address 0x0010f68c
                0x0020003c                __data_start__ = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0020003c        0x4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(rand.o)
                0x0020003c                __rand_next
 .data          0x00200040        0x4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
                0x00200040                ctl_libc_mutex
                0x00200044                __data_end__ = (__data_start__ + SIZEOF (.data))
                0x00000001                . = ASSERT ((((__data_load_start__ + SIZEOF (.data)) >= __FLASH_segment_start__) && ((__data_load_start__ + SIZEOF (.data)) <= (__FLASH_segment_start__ + 0x10000))), .data is too large to fit in FLASH memory segment)

.data_run       0x0020003c        0x8
                0x0020003c                __data_run_start__ = .
                0x00200044                . = ((__data_run_start__ + SIZEOF (.data)) MAX_K .)
 *fill*         0x0020003c        0x8 00
                0x00200044                __data_run_end__ = (__data_run_start__ + SIZEOF (.data_run))
                0x00000001                . = ASSERT (((__data_run_end__ >= __SRAM_segment_start__) && (__data_run_end__ <= (__SRAM_segment_start__ + 0x4000))), .data_run is too large to fit in SRAM memory segment)

.bss            0x00200044      0x8b4
                0x00200044                __bss_start__ = .
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00200044        0x4 ARM Flash Release/test_AT91SAM7EK.o
 .bss           0x00200048        0x8 ARM Flash Release/test_AT91SAM7.o
 .bss           0x00200050        0x4 ARM Flash Release/AT91SAM7.o
 *(COMMON)
 COMMON         0x00200054        0x4 ARM Flash Release/test_AT91SAM7.o
                0x00200054                idleCount
 COMMON         0x00200058      0x890 ARM Flash Release/test.o
                0x00200058                task2_stack
                0x00200460                task2_task
                0x00200480                somestring
                0x0020049c                task1_stack
                0x002008a4                task1_task
                0x002008c4                main_task
                0x002008e4                e1
 COMMON         0x002008e8       0x10 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
                0x002008e8                ctl_interrupt_count
                0x002008ec                ctl_current_time
                0x002008f0                ctl_task_executing
                0x002008f4                ctl_task_list
                0x002008f8                __bss_end__ = (__bss_start__ + SIZEOF (.bss))
                0x00000001                . = ASSERT (((__bss_end__ >= __SRAM_segment_start__) && (__bss_end__ <= (__SRAM_segment_start__ + 0x4000))), .bss is too large to fit in SRAM memory segment)

.heap           0x002008f8      0x400
                0x002008f8                __heap_start__ = .
 *(.heap)
                0x00200cf8                . = ((__heap_start__ + __HEAPSIZE__) MAX_K .)
 *fill*         0x002008f8      0x400 00
                0x00200cf8                __heap_end__ = (__heap_start__ + SIZEOF (.heap))
                0x00000001                . = ASSERT (((__heap_end__ >= __SRAM_segment_start__) && (__heap_end__ <= (__SRAM_segment_start__ + 0x4000))), .heap is too large to fit in SRAM memory segment)

.stack          0x00200cf8      0x400
                0x00200cf8                __stack_start__ = .
 *(.stack)
                0x002010f8                . = ((__stack_start__ + __STACKSIZE__) MAX_K .)
 *fill*         0x00200cf8      0x400 00
                0x002010f8                __stack_end__ = (__stack_start__ + SIZEOF (.stack))
                0x00000001                . = ASSERT (((__stack_end__ >= __SRAM_segment_start__) && (__stack_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack is too large to fit in SRAM memory segment)

.stack_irq      0x002010f8      0x100
                0x002010f8                __stack_irq_start__ = .
 *(.stack_irq)
                0x002011f8                . = ((__stack_irq_start__ + __STACKSIZE_IRQ__) MAX_K .)
 *fill*         0x002010f8      0x100 00
                0x002011f8                __stack_irq_end__ = (__stack_irq_start__ + SIZEOF (.stack_irq))
                0x00000001                . = ASSERT (((__stack_irq_end__ >= __SRAM_segment_start__) && (__stack_irq_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_irq is too large to fit in SRAM memory segment)

.stack_fiq      0x002011f8      0x100
                0x002011f8                __stack_fiq_start__ = .
 *(.stack_fiq)
                0x002012f8                . = ((__stack_fiq_start__ + __STACKSIZE_FIQ__) MAX_K .)
 *fill*         0x002011f8      0x100 00
                0x002012f8                __stack_fiq_end__ = (__stack_fiq_start__ + SIZEOF (.stack_fiq))
                0x00000001                . = ASSERT (((__stack_fiq_end__ >= __SRAM_segment_start__) && (__stack_fiq_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_fiq is too large to fit in SRAM memory segment)

.stack_svc      0x002012f8        0x0
                0x002012f8                __stack_svc_start__ = .
 *(.stack_svc)
                0x002012f8                . = ((__stack_svc_start__ + __STACKSIZE_SVC__) MAX_K .)
                0x002012f8                __stack_svc_end__ = (__stack_svc_start__ + SIZEOF (.stack_svc))
                0x00000001                . = ASSERT (((__stack_svc_end__ >= __SRAM_segment_start__) && (__stack_svc_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_svc is too large to fit in SRAM memory segment)

.stack_abt      0x002012f8        0x0
                0x002012f8                __stack_abt_start__ = .
 *(.stack_abt)
                0x002012f8                . = ((__stack_abt_start__ + __STACKSIZE_ABT__) MAX_K .)
                0x002012f8                __stack_abt_end__ = (__stack_abt_start__ + SIZEOF (.stack_abt))
                0x00000001                . = ASSERT (((__stack_abt_end__ >= __SRAM_segment_start__) && (__stack_abt_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_abt is too large to fit in SRAM memory segment)

.stack_und      0x002012f8        0x0
                0x002012f8                __stack_und_start__ = .
 *(.stack_und)
                0x002012f8                . = ((__stack_und_start__ + __STACKSIZE_UND__) MAX_K .)
                0x002012f8                __stack_und_end__ = (__stack_und_start__ + SIZEOF (.stack_und))
                0x00000001                . = ASSERT (((__stack_und_end__ >= __SRAM_segment_start__) && (__stack_und_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_und is too large to fit in SRAM memory segment)
START GROUP
LOAD ARM Flash Release/test_AT91SAM7EK.o
LOAD ARM Flash Release/test_AT91SAM7.o
LOAD ARM Flash Release/test.o
LOAD ARM Flash Release/serial.o
LOAD ARM Flash Release/spi.o
LOAD ARM Flash Release/pcf8833u8_lcd.o
LOAD ARM Flash Release/fonts.o
LOAD ARM Flash Release/Bitmap.o
LOAD ARM Flash Release/crt0.o
LOAD ARM Flash Release/AT91SAM7_Startup.o
LOAD ARM Flash Release/AT91SAM7.o
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libarmdi_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libcpp_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfscanf_long_v4t_a_i_le_mt.a
END GROUP
OUTPUT(ARM Flash Release/test5.elf elf32-littlearm)

.comment        0x00000000      0x240
 .comment       0x00000000       0x12 ARM Flash Release/test_AT91SAM7EK.o
 .comment       0x00000012       0x12 ARM Flash Release/test_AT91SAM7.o
 .comment       0x00000024       0x12 ARM Flash Release/test.o
 .comment       0x00000036       0x12 ARM Flash Release/serial.o
 .comment       0x00000048       0x12 ARM Flash Release/spi.o
 .comment       0x0000005a       0x12 ARM Flash Release/pcf8833u8_lcd.o
 .comment       0x0000006c       0x12 ARM Flash Release/fonts.o
 .comment       0x0000007e       0x12 ARM Flash Release/Bitmap.o
 .comment       0x00000090       0x12 ARM Flash Release/AT91SAM7.o
 .comment       0x000000a2       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
 .comment       0x000000b4       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o)
 .comment       0x000000c6       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(sin.o)
 .comment       0x000000d8       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
 .comment       0x000000ea       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__float64_infinity.o)
 .comment       0x000000fc       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(fabs.o)
 .comment       0x0000010e       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__poly_eval.o)
 .comment       0x00000120       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o)
 .comment       0x00000132       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(sprintf.o)
 .comment       0x00000144       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(abs.o)
 .comment       0x00000156       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(srand.o)
 .comment       0x00000168       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(rand.o)
 .comment       0x0000017a       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
 .comment       0x0000018c       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
 .comment       0x0000019e       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_evt.o)
 .comment       0x000001b0       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(frexp.o)
 .comment       0x000001c2       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(ldexp.o)
 .comment       0x000001d4       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isinf.o)
 .comment       0x000001e6       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isnan.o)
 .comment       0x000001f8       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
 .comment       0x0000020a       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__hex_lc_uc.o)
 .comment       0x0000021c       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfdi.o)
 .comment       0x0000022e       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_floatdidf.o)
