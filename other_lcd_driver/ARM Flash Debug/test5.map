Archive member included because of file (symbol)

C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
                              ARM Flash Debug/test.o (ctl_task_init)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_arm.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o) (ctl_private_init_registers)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (cos)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(sin.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (sin)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o) (__sincos)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__float64_infinity.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__float64_infinity)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(fabs.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (fabs)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__poly_eval.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__poly_eval)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int32_udivmod.o)
                              ARM Flash Debug/test_AT91SAM7.o (__udivsi3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o)
                              ARM Flash Debug/test.o (printf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(sprintf.o)
                              ARM Flash Debug/test.o (sprintf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(abs.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (abs)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubdf3.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o) (__subdf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubsf3.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (__subsf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_cmpdf2.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__gedf2)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixdfsi.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__fixdfsi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfsi.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (__fixunsdfsi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunssfsi.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (__fixunssfsi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivdf3.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (__muldf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivsf3.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (__divsf3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_truncdfsf2.o)
                              ARM Flash Debug/pcf8833u8_lcd.o (__truncdfsf2)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o) (__vfprintf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o) (__errno)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_evt.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o) (ctl_events_wait)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(frexp.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (frexp)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(ldexp.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (ldexp)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isinf.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__isinf)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isnan.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__isnan)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_umod.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__umoddi3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_udivmod.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__udivdi3)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_cmp.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__cmpdi2)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(strlen.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (strlen)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__pow10)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__hex_lc_uc.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__hex_uc)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfdi.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__fixunsdfdi)
C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_floatdidf.o)
                              C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o) (__floatdidf)

Allocating common symbols
Common symbol       size              file

ctl_interrupt_count
                    0x1               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
task2_stack         0x408             ARM Flash Debug/test.o
task2_task          0x20              ARM Flash Debug/test.o
ctl_current_time    0x4               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
ctl_task_executing  0x4               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
idleCount           0x4               ARM Flash Debug/test_AT91SAM7.o
somestring          0x19              ARM Flash Debug/test.o
task1_stack         0x408             ARM Flash Debug/test.o
task1_task          0x20              ARM Flash Debug/test.o
main_task           0x20              ARM Flash Debug/test.o
ctl_task_list       0x4               C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
e1                  0x4               ARM Flash Debug/test.o

Memory Configuration

Name             Origin             Length             Attributes
User_Peripherals 0xf0000000         0x0fff0000         xw
System_Controller 0xfffff000         0x00000000         xw
SRAM             0x00200000         0x00004000         xw
FLASH            0x00100000         0x00010000         xr
*default*        0x00000000         0xffffffff

Linker script and memory map

                0xf0000000                __User_Peripherals_segment_start__ = 0xf0000000
                0xffff0000                __User_Peripherals_segment_end__ = 0xffff0000
                0xfffff000                __System_Controller_segment_start__ = 0xfffff000
                0xfffff000                __System_Controller_segment_end__ = 0xfffff000
                0x00200000                __SRAM_segment_start__ = 0x200000
                0x00204000                __SRAM_segment_end__ = 0x204000
                0x00100000                __FLASH_segment_start__ = 0x100000
                0x00110000                __FLASH_segment_end__ = 0x110000
                0x00000400                __STACKSIZE__ = 0x400
                0x00000100                __STACKSIZE_IRQ__ = 0x100
                0x00000100                __STACKSIZE_FIQ__ = 0x100
                0x00000000                __STACKSIZE_SVC__ = 0x0
                0x00000000                __STACKSIZE_ABT__ = 0x0
                0x00000000                __STACKSIZE_UND__ = 0x0
                0x00000400                __HEAPSIZE__ = 0x400

.vectors_ram    0x00200000       0x3c
                0x00200000                __vectors_ram_start__ = .
 *(.vectors_ram)
                0x0020003c                . = ((__vectors_ram_start__ + 0x3c) MAX_K .)
 *fill*         0x00200000       0x3c 00
                0x0020003c                __vectors_ram_end__ = (__vectors_ram_start__ + SIZEOF (.vectors_ram))
                0x00000001                . = ASSERT (((__vectors_ram_end__ >= __SRAM_segment_start__) && (__vectors_ram_end__ <= (__SRAM_segment_start__ + 0x4000))), .vectors_ram is too large to fit in SRAM memory segment)

.vectors        0x00100000       0x3c
                0x00100000                __vectors_start__ = .
 *(.vectors .vectors.*)
 .vectors       0x00100000       0x3c ARM Flash Debug/AT91SAM7_Startup.o
                0x0010003c                __vectors_end__ = (__vectors_start__ + SIZEOF (.vectors))
                0x00000001                . = ASSERT (((__vectors_end__ >= __FLASH_segment_start__) && (__vectors_end__ <= (__FLASH_segment_start__ + 0x10000))), .vectors is too large to fit in FLASH memory segment)

.init           0x0010003c      0x274
                0x0010003c                __init_start__ = .
 *(.init .init.*)
 .init          0x0010003c      0x1e0 ARM Flash Debug/crt0.o
                0x0010003c                __start
                0x0010003c                _start
 .init          0x0010021c       0x94 ARM Flash Debug/AT91SAM7_Startup.o
                0x00100284                undef_handler
                0x0010028c                pabort_handler
                0x00100290                dabort_handler
                0x00100298                fiq_handler
                0x001002b0                __init_end__ = (__init_start__ + SIZEOF (.init))
                0x00000001                . = ASSERT (((__init_end__ >= __FLASH_segment_start__) && (__init_end__ <= (__FLASH_segment_start__ + 0x10000))), .init is too large to fit in FLASH memory segment)

.text_load      0x001002b0        0x0
                0x001002b0                __text_load_start__ = .
 *(.text_load)
                0x001002b0                __text_load_end__ = (__text_load_start__ + SIZEOF (.text_load))
                0x00000001                . = ASSERT (((__text_load_end__ >= __FLASH_segment_start__) && (__text_load_end__ <= (__FLASH_segment_start__ + 0x10000))), .text_load is too large to fit in FLASH memory segment)

.text           0x001002b0     0x5ef8
                0x001002b0                __text_start__ = .
 *(.text .text.* .glue_7t .glue_7 .gnu.linkonce.t.*)
 .text          0x001002b0      0x1bc ARM Flash Debug/test_AT91SAM7EK.o
                0x001002b0                BoardInit
                0x0010032c                ProcessorClockFrequency
                0x001003c4                SetButtonPressedISR
 .text          0x0010046c      0x188 ARM Flash Debug/test_AT91SAM7.o
                0x001005c8                Idle
                0x001004a4                SetTimerISR
                0x001005ac                TicksPerSecond
 .text          0x001005f4      0x5cc ARM Flash Debug/test.o
                0x00100ac4                ctl_handle_error
                0x00100adc                main
                0x00100668                Task_2
                0x001005f4                Task_1
 .text          0x00100bc0      0x208 ARM Flash Debug/serial.o
                0x00100cc8                UARTWriteChar
                0x00100d98                __putchar
                0x00100d20                UARTReadChar
                0x00100d6c                UARTReadAvailable
                0x00100bc0                UARTInitialize
 .text          0x00100dc8       0xb0 ARM Flash Debug/spi.o
                0x00100dc8                InitSPI
 .text          0x00100e78     0x1408 ARM Flash Debug/pcf8833u8_lcd.o
                0x00101134                GotoXY
                0x00101498                LCD_Funct_B
                0x00100e78                SendLcd
                0x001018b8                LCD_Circle
                0x00101b4c                LCD_Thick_Circle
                0x00102184                ShowImage
                0x001012fc                LCD_Funct_A
                0x00101634                LCD_Line
                0x00101f98                LCD_String
                0x00100ef8                InitLCD
                0x00101218                LCD_Fill
                0x00101c64                LCD_Circle_Line
                0x001011b4                LCD_PixelPut
                0x001017ac                LCD_Box
 .text          0x00102280      0x268 ARM Flash Debug/AT91SAM7.o
                0x00102464                ctl_unmask_isr
                0x001022d4                ctl_set_isr
                0x00102280                irq_handler
                0x001024a4                ctl_mask_isr
 .text          0x001024e8      0x58c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
                0x00102798                ctl_task_remove
                0x0010261c                ctl_task_reschedule
                0x0010284c                ctl_task_set_priority
                0x0010269c                ctl_task_init
                0x001028f8                ctl_exit_isr
                0x00102890                ctl_timeout_wait
                0x00102748                ctl_task_die
                0x00102a48                ctl_get_current_time
                0x001026c0                ctl_task_run
                0x001029e8                ctl_increment_tick_from_isr
 .text          0x00102a74      0x20c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_arm.o)
                0x00102b0c                ctl_private_switch_context
                0x00102c44                ctl_global_interrupts_re_enable_from_isr
                0x00102bf8                ctl_global_interrupts_disable
                0x00102c20                ctl_global_interrupts_set
                0x00102c60                ctl_global_interrupts_un_re_enable_from_isr
                0x00102bbc                ctl_private_isr_return
                0x00102bd0                ctl_global_interrupts_enable
                0x00102b40                ctl_private_switch_isr_context
                0x00102ad0                swi_handler
                0x00102a74                ctl_private_init_registers
 .text          0x00102c80       0xd4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o)
                0x00102c80                cos
 .text          0x00102d54       0xa4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(sin.o)
                0x00102d54                sin
 .text          0x00102df8      0x1fc C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
                0x00102df8                __sincos
 .text          0x00102ff4       0x24 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(fabs.o)
                0x00102ff4                fabs
 .text          0x00103018       0x60 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__poly_eval.o)
                0x00103018                __poly_eval
 .text          0x00103078       0x30 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int32_udivmod.o)
                0x00103078                __int32_udiv
                0x00103078                __int32_udivmod
                0x00103078                __udivsi3
 .text          0x001030a8       0x5c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o)
                0x001030a8                printf
 .text          0x00103104       0x44 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(sprintf.o)
                0x00103104                sprintf
 .text          0x00103148        0xc C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(abs.o)
                0x00103148                abs
 .text          0x00103154      0x3a8 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubdf3.o)
                0x00103484                __floatsidf
                0x001034b0                __extendsfdf2
                0x00103158                __adddf3
                0x0010345c                __floatunsidf
                0x00103154                __subdf3
 .text          0x001034fc      0x218 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_addsubsf3.o)
                0x001034fc                __subsf3
                0x001036c8                __floatsisf
                0x001036c0                __floatunsisf
                0x00103500                __addsf3
 .text          0x00103714       0xb4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_cmpdf2.o)
                0x00103724                __cmpdf2
                0x00103724                __eqdf2
                0x00103714                __gtdf2
                0x0010371c                __ltdf2
                0x0010371c                __ledf2
                0x00103724                __nedf2
                0x00103714                __gedf2
 .text          0x001037c8       0x80 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixdfsi.o)
                0x001037c8                __fixdfsi
 .text          0x00103848       0x74 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfsi.o)
                0x00103848                __fixunsdfsi
 .text          0x001038bc       0x5c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunssfsi.o)
                0x001038bc                __fixunssfsi
 .text          0x00103918      0x4ec C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivdf3.o)
                0x00103b90                __divdf3
                0x00103918                __muldf3
 .text          0x00103e04      0x330 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_muldivsf3.o)
                0x00103f94                __divsf3
                0x00103e04                __mulsf3
 .text          0x00104134       0xf8 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_truncdfsf2.o)
                0x00104134                __truncdfsf2
 .text          0x0010422c     0x1740 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
                0x001042f8                __vfprintf
 .text          0x0010596c      0x194 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
                0x0010596c                __errno
                0x00105a18                __printf_unlock
                0x00105980                __heap_lock
                0x001059b8                __heap_unlock
                0x00105a78                __scanf_unlock
                0x001059e0                __printf_lock
                0x00105aa0                __debug_io_lock
                0x00105ad8                __debug_io_unlock
                0x00105a40                __scanf_lock
 .text          0x00105b00      0x1fc C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_evt.o)
                0x00105c0c                ctl_events_set_clear
                0x00105b00                ctl_events_init
                0x00105b28                ctl_events_wait
 .text          0x00105cfc       0x94 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(frexp.o)
                0x00105cfc                frexp
 .text          0x00105d90       0xc0 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(ldexp.o)
                0x00105d90                ldexp
 .text          0x00105e50       0x40 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isinf.o)
                0x00105e50                __isinf
 .text          0x00105e90       0x48 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isnan.o)
                0x00105e90                __isnan
 .text          0x00105ed8       0x18 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_umod.o)
                0x00105ed8                __int64_umod
                0x00105ed8                __umoddi3
 .text          0x00105ef0       0x8c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_udivmod.o)
                0x00105ef0                __int64_udivmod
                0x00105ef0                __int64_udiv
                0x00105ef0                __udivdi3
 .text          0x00105f7c       0x24 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__int64_cmp.o)
                0x00105f7c                __cmpdi2
                0x00105f7c                __int64_cmp
 .text          0x00105fa0       0x54 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(strlen.o)
                0x00105fa0                strlen
 .text          0x00105ff4       0x94 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
                0x00105ff4                __pow10
 .text          0x00106088       0x94 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfdi.o)
                0x00106088                __fixunsdfdi
 .text          0x0010611c       0x8c C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_floatdidf.o)
                0x0010611c                __floatdidf
                0x001061a8                __text_end__ = (__text_start__ + SIZEOF (.text))
                0x00000001                . = ASSERT (((__text_end__ >= __FLASH_segment_start__) && (__text_end__ <= (__FLASH_segment_start__ + 0x10000))), .text is too large to fit in FLASH memory segment)

.dtors          0x001061a8        0x0
                0x001061a8                __dtors_start__ = .
 *(SORT(.dtors.*))
 *(.dtors)
                0x001061a8                __dtors_end__ = (__dtors_start__ + SIZEOF (.dtors))
                0x00000001                . = ASSERT (((__dtors_end__ >= __FLASH_segment_start__) && (__dtors_end__ <= (__FLASH_segment_start__ + 0x10000))), .dtors is too large to fit in FLASH memory segment)

.ctors          0x001061a8        0x0
                0x001061a8                __ctors_start__ = .
 *(SORT(.ctors.*))
 *(.ctors)
                0x001061a8                __ctors_end__ = (__ctors_start__ + SIZEOF (.ctors))
                0x00000001                . = ASSERT (((__ctors_end__ >= __FLASH_segment_start__) && (__ctors_end__ <= (__FLASH_segment_start__ + 0x10000))), .ctors is too large to fit in FLASH memory segment)

.rodata         0x001061a8     0x5208
                0x001061a8                __rodata_start__ = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x001061a8       0x78 ARM Flash Debug/test.o
 .rodata        0x00106220      0xc20 ARM Flash Debug/fonts.o
                0x00106528                FONT8x8F
                0x00106830                FONT8x16
                0x00106220                FONT6x8
 .rodata        0x00106e40     0x4414 ARM Flash Debug/Bitmap.o
                0x00106e40                display3000logo
 .rodata        0x0010b254       0x40 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
 .rodata        0x0010b294        0x8 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__float64_infinity.o)
                0x0010b294                __float64_infinity
 .rodata        0x0010b29c       0x98 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
 .rodata.str1.4
                0x0010b334       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
                                 0x14 (size before relaxing)
 *fill*         0x0010b346        0x2 00
 .rodata        0x0010b348       0x48 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
 .rodata        0x0010b390       0x20 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__hex_lc_uc.o)
                0x0010b390                __hex_uc
                0x0010b3a0                __hex_lc
                0x0010b3b0                __rodata_end__ = (__rodata_start__ + SIZEOF (.rodata))
                0x00000001                . = ASSERT (((__rodata_end__ >= __FLASH_segment_start__) && (__rodata_end__ <= (__FLASH_segment_start__ + 0x10000))), .rodata is too large to fit in FLASH memory segment)
                0x0010b3b0                __fast_load_start__ = (__rodata_end__ ALIGN 0x4)

.fast           0x0020003c        0x0 load address 0x0010b3b0
                0x0020003c                __fast_start__ = .
 *(.fast .fast.*)
                0x0020003c                __fast_end__ = (__fast_start__ + SIZEOF (.fast))
                0x00000001                . = ASSERT ((((__fast_load_start__ + SIZEOF (.fast)) >= __FLASH_segment_start__) && ((__fast_load_start__ + SIZEOF (.fast)) <= (__FLASH_segment_start__ + 0x10000))), .fast is too large to fit in FLASH memory segment)

.fast_run       0x0020003c        0x0
                0x0020003c                __fast_run_start__ = .
                0x0020003c                . = ((__fast_run_start__ + SIZEOF (.fast)) MAX_K .)
                0x0020003c                __fast_run_end__ = (__fast_run_start__ + SIZEOF (.fast_run))
                0x00000001                . = ASSERT (((__fast_run_end__ >= __SRAM_segment_start__) && (__fast_run_end__ <= (__SRAM_segment_start__ + 0x4000))), .fast_run is too large to fit in SRAM memory segment)
                0x0010b3b0                __data_load_start__ = ((__fast_load_start__ + SIZEOF (.fast)) ALIGN 0x4)

.data           0x0020003c       0x10 load address 0x0010b3b0
                0x0020003c                __data_start__ = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0020003c        0xa ARM Flash Debug/test.o
                0x0020003c                colors
 *fill*         0x00200046        0x2 00
 .data          0x00200048        0x4 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
                0x00200048                ctl_libc_mutex
                0x0020004c                __data_end__ = (__data_start__ + SIZEOF (.data))
                0x00000001                . = ASSERT ((((__data_load_start__ + SIZEOF (.data)) >= __FLASH_segment_start__) && ((__data_load_start__ + SIZEOF (.data)) <= (__FLASH_segment_start__ + 0x10000))), .data is too large to fit in FLASH memory segment)

.data_run       0x0020003c       0x10
                0x0020003c                __data_run_start__ = .
                0x0020004c                . = ((__data_run_start__ + SIZEOF (.data)) MAX_K .)
 *fill*         0x0020003c       0x10 00
                0x0020004c                __data_run_end__ = (__data_run_start__ + SIZEOF (.data_run))
                0x00000001                . = ASSERT (((__data_run_end__ >= __SRAM_segment_start__) && (__data_run_end__ <= (__SRAM_segment_start__ + 0x4000))), .data_run is too large to fit in SRAM memory segment)

.bss            0x0020004c      0x8b4
                0x0020004c                __bss_start__ = .
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0020004c        0x4 ARM Flash Debug/test_AT91SAM7EK.o
 .bss           0x00200050        0x8 ARM Flash Debug/test_AT91SAM7.o
 .bss           0x00200058        0x4 ARM Flash Debug/AT91SAM7.o
 *(COMMON)
 COMMON         0x0020005c        0x4 ARM Flash Debug/test_AT91SAM7.o
                0x0020005c                idleCount
 COMMON         0x00200060      0x890 ARM Flash Debug/test.o
                0x00200060                task2_stack
                0x00200468                task2_task
                0x00200488                somestring
                0x002004a4                task1_stack
                0x002008ac                task1_task
                0x002008cc                main_task
                0x002008ec                e1
 COMMON         0x002008f0       0x10 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
                0x002008f0                ctl_interrupt_count
                0x002008f4                ctl_current_time
                0x002008f8                ctl_task_executing
                0x002008fc                ctl_task_list
                0x00200900                __bss_end__ = (__bss_start__ + SIZEOF (.bss))
                0x00000001                . = ASSERT (((__bss_end__ >= __SRAM_segment_start__) && (__bss_end__ <= (__SRAM_segment_start__ + 0x4000))), .bss is too large to fit in SRAM memory segment)

.heap           0x00200900      0x400
                0x00200900                __heap_start__ = .
 *(.heap)
                0x00200d00                . = ((__heap_start__ + __HEAPSIZE__) MAX_K .)
 *fill*         0x00200900      0x400 00
                0x00200d00                __heap_end__ = (__heap_start__ + SIZEOF (.heap))
                0x00000001                . = ASSERT (((__heap_end__ >= __SRAM_segment_start__) && (__heap_end__ <= (__SRAM_segment_start__ + 0x4000))), .heap is too large to fit in SRAM memory segment)

.stack          0x00200d00      0x400
                0x00200d00                __stack_start__ = .
 *(.stack)
                0x00201100                . = ((__stack_start__ + __STACKSIZE__) MAX_K .)
 *fill*         0x00200d00      0x400 00
                0x00201100                __stack_end__ = (__stack_start__ + SIZEOF (.stack))
                0x00000001                . = ASSERT (((__stack_end__ >= __SRAM_segment_start__) && (__stack_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack is too large to fit in SRAM memory segment)

.stack_irq      0x00201100      0x100
                0x00201100                __stack_irq_start__ = .
 *(.stack_irq)
                0x00201200                . = ((__stack_irq_start__ + __STACKSIZE_IRQ__) MAX_K .)
 *fill*         0x00201100      0x100 00
                0x00201200                __stack_irq_end__ = (__stack_irq_start__ + SIZEOF (.stack_irq))
                0x00000001                . = ASSERT (((__stack_irq_end__ >= __SRAM_segment_start__) && (__stack_irq_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_irq is too large to fit in SRAM memory segment)

.stack_fiq      0x00201200      0x100
                0x00201200                __stack_fiq_start__ = .
 *(.stack_fiq)
                0x00201300                . = ((__stack_fiq_start__ + __STACKSIZE_FIQ__) MAX_K .)
 *fill*         0x00201200      0x100 00
                0x00201300                __stack_fiq_end__ = (__stack_fiq_start__ + SIZEOF (.stack_fiq))
                0x00000001                . = ASSERT (((__stack_fiq_end__ >= __SRAM_segment_start__) && (__stack_fiq_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_fiq is too large to fit in SRAM memory segment)

.stack_svc      0x00201300        0x0
                0x00201300                __stack_svc_start__ = .
 *(.stack_svc)
                0x00201300                . = ((__stack_svc_start__ + __STACKSIZE_SVC__) MAX_K .)
                0x00201300                __stack_svc_end__ = (__stack_svc_start__ + SIZEOF (.stack_svc))
                0x00000001                . = ASSERT (((__stack_svc_end__ >= __SRAM_segment_start__) && (__stack_svc_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_svc is too large to fit in SRAM memory segment)

.stack_abt      0x00201300        0x0
                0x00201300                __stack_abt_start__ = .
 *(.stack_abt)
                0x00201300                . = ((__stack_abt_start__ + __STACKSIZE_ABT__) MAX_K .)
                0x00201300                __stack_abt_end__ = (__stack_abt_start__ + SIZEOF (.stack_abt))
                0x00000001                . = ASSERT (((__stack_abt_end__ >= __SRAM_segment_start__) && (__stack_abt_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_abt is too large to fit in SRAM memory segment)

.stack_und      0x00201300        0x0
                0x00201300                __stack_und_start__ = .
 *(.stack_und)
                0x00201300                . = ((__stack_und_start__ + __STACKSIZE_UND__) MAX_K .)
                0x00201300                __stack_und_end__ = (__stack_und_start__ + SIZEOF (.stack_und))
                0x00000001                . = ASSERT (((__stack_und_end__ >= __SRAM_segment_start__) && (__stack_und_end__ <= (__SRAM_segment_start__ + 0x4000))), .stack_und is too large to fit in SRAM memory segment)
START GROUP
LOAD ARM Flash Debug/test_AT91SAM7EK.o
LOAD ARM Flash Debug/test_AT91SAM7.o
LOAD ARM Flash Debug/test.o
LOAD ARM Flash Debug/serial.o
LOAD ARM Flash Debug/spi.o
LOAD ARM Flash Debug/pcf8833u8_lcd.o
LOAD ARM Flash Debug/fonts.o
LOAD ARM Flash Debug/Bitmap.o
LOAD ARM Flash Debug/crt0.o
LOAD ARM Flash Debug/AT91SAM7_Startup.o
LOAD ARM Flash Debug/AT91SAM7.o
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libarmdi_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libcpp_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a
LOAD C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfscanf_long_v4t_a_i_le_mt.a
END GROUP
OUTPUT(ARM Flash Debug/test5.elf elf32-littlearm)

.debug_abbrev   0x00000000      0x614
 .debug_abbrev  0x00000000       0xc5 ARM Flash Debug/test_AT91SAM7EK.o
 .debug_abbrev  0x000000c5       0xd7 ARM Flash Debug/test_AT91SAM7.o
 .debug_abbrev  0x0000019c      0x15b ARM Flash Debug/test.o
 .debug_abbrev  0x000002f7       0x86 ARM Flash Debug/serial.o
 .debug_abbrev  0x0000037d       0x29 ARM Flash Debug/spi.o
 .debug_abbrev  0x000003a6       0xfa ARM Flash Debug/pcf8833u8_lcd.o
 .debug_abbrev  0x000004a0       0x49 ARM Flash Debug/fonts.o
 .debug_abbrev  0x000004e9       0x49 ARM Flash Debug/Bitmap.o
 .debug_abbrev  0x00000532       0x14 ARM Flash Debug/crt0.o
 .debug_abbrev  0x00000546       0x10 ARM Flash Debug/AT91SAM7_Startup.o
 .debug_abbrev  0x00000556       0xbe ARM Flash Debug/AT91SAM7.o

.debug_info     0x00000000     0x1eda
 .debug_info    0x00000000      0x264 ARM Flash Debug/test_AT91SAM7EK.o
 .debug_info    0x00000264      0x254 ARM Flash Debug/test_AT91SAM7.o
 .debug_info    0x000004b8      0x5fb ARM Flash Debug/test.o
 .debug_info    0x00000ab3      0x1fd ARM Flash Debug/serial.o
 .debug_info    0x00000cb0      0x11d ARM Flash Debug/spi.o
 .debug_info    0x00000dcd      0x865 ARM Flash Debug/pcf8833u8_lcd.o
 .debug_info    0x00001632      0x1a9 ARM Flash Debug/fonts.o
 .debug_info    0x000017db      0x15f ARM Flash Debug/Bitmap.o
 .debug_info    0x0000193a      0x10a ARM Flash Debug/crt0.o
 .debug_info    0x00001a44      0x11e ARM Flash Debug/AT91SAM7_Startup.o
 .debug_info    0x00001b62      0x378 ARM Flash Debug/AT91SAM7.o

.debug_line     0x00000000      0xb31
 .debug_line    0x00000000      0x122 ARM Flash Debug/test_AT91SAM7EK.o
 .debug_line    0x00000122      0x11a ARM Flash Debug/test_AT91SAM7.o
 .debug_line    0x0000023c      0x15e ARM Flash Debug/test.o
 .debug_line    0x0000039a       0xbd ARM Flash Debug/serial.o
 .debug_line    0x00000457       0xa8 ARM Flash Debug/spi.o
 .debug_line    0x000004ff      0x1cd ARM Flash Debug/pcf8833u8_lcd.o
 .debug_line    0x000006cc       0x92 ARM Flash Debug/fonts.o
 .debug_line    0x0000075e       0x93 ARM Flash Debug/Bitmap.o
 .debug_line    0x000007f1      0x10e ARM Flash Debug/crt0.o
 .debug_line    0x000008ff       0xfd ARM Flash Debug/AT91SAM7_Startup.o
 .debug_line    0x000009fc      0x135 ARM Flash Debug/AT91SAM7.o

.debug_frame    0x00000000      0x6b8
 .debug_frame   0x00000000       0xec ARM Flash Debug/test_AT91SAM7EK.o
 .debug_frame   0x000000ec       0xc4 ARM Flash Debug/test_AT91SAM7.o
 .debug_frame   0x000001b0       0xc0 ARM Flash Debug/test.o
 .debug_frame   0x00000270       0xec ARM Flash Debug/serial.o
 .debug_frame   0x0000035c       0x3c ARM Flash Debug/spi.o
 .debug_frame   0x00000398      0x27c ARM Flash Debug/pcf8833u8_lcd.o
 .debug_frame   0x00000614       0xa4 ARM Flash Debug/AT91SAM7.o

.debug_pubnames
                0x00000000      0x372
 .debug_pubnames
                0x00000000       0x54 ARM Flash Debug/test_AT91SAM7EK.o
 .debug_pubnames
                0x00000054       0x4c ARM Flash Debug/test_AT91SAM7.o
 .debug_pubnames
                0x000000a0       0xb3 ARM Flash Debug/test.o
 .debug_pubnames
                0x00000153       0x6c ARM Flash Debug/serial.o
 .debug_pubnames
                0x000001bf       0x1e ARM Flash Debug/spi.o
 .debug_pubnames
                0x000001dd       0xe1 ARM Flash Debug/pcf8833u8_lcd.o
 .debug_pubnames
                0x000002be       0x38 ARM Flash Debug/fonts.o
 .debug_pubnames
                0x000002f6       0x26 ARM Flash Debug/Bitmap.o
 .debug_pubnames
                0x0000031c       0x56 ARM Flash Debug/AT91SAM7.o

.debug_aranges  0x00000000      0x128
 .debug_aranges
                0x00000000       0x20 ARM Flash Debug/test_AT91SAM7EK.o
 .debug_aranges
                0x00000020       0x20 ARM Flash Debug/test_AT91SAM7.o
 .debug_aranges
                0x00000040       0x20 ARM Flash Debug/test.o
 .debug_aranges
                0x00000060       0x20 ARM Flash Debug/serial.o
 .debug_aranges
                0x00000080       0x20 ARM Flash Debug/spi.o
 .debug_aranges
                0x000000a0       0x20 ARM Flash Debug/pcf8833u8_lcd.o
 .debug_aranges
                0x000000c0       0x20 ARM Flash Debug/crt0.o
 .debug_aranges
                0x000000e0       0x28 ARM Flash Debug/AT91SAM7_Startup.o
 .debug_aranges
                0x00000108       0x20 ARM Flash Debug/AT91SAM7.o

.comment        0x00000000      0x21c
 .comment       0x00000000       0x12 ARM Flash Debug/test_AT91SAM7EK.o
 .comment       0x00000012       0x12 ARM Flash Debug/test_AT91SAM7.o
 .comment       0x00000024       0x12 ARM Flash Debug/test.o
 .comment       0x00000036       0x12 ARM Flash Debug/serial.o
 .comment       0x00000048       0x12 ARM Flash Debug/spi.o
 .comment       0x0000005a       0x12 ARM Flash Debug/pcf8833u8_lcd.o
 .comment       0x0000006c       0x12 ARM Flash Debug/fonts.o
 .comment       0x0000007e       0x12 ARM Flash Debug/Bitmap.o
 .comment       0x00000090       0x12 ARM Flash Debug/AT91SAM7.o
 .comment       0x000000a2       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl.o)
 .comment       0x000000b4       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(cos.o)
 .comment       0x000000c6       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(sin.o)
 .comment       0x000000d8       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__sincos.o)
 .comment       0x000000ea       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__float64_infinity.o)
 .comment       0x000000fc       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(fabs.o)
 .comment       0x0000010e       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__poly_eval.o)
 .comment       0x00000120       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(printf.o)
 .comment       0x00000132       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(sprintf.o)
 .comment       0x00000144       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(abs.o)
 .comment       0x00000156       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/lib_vfprintf_double_long_long_v4t_a_i_le_mt.a(__vfprintf_double_long_long.o)
 .comment       0x00000168       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_libc.o)
 .comment       0x0000017a       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/ctl/lib/libctl_v4t_a_i_le_mt.a(ctl_evt.o)
 .comment       0x0000018c       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(frexp.o)
 .comment       0x0000019e       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(ldexp.o)
 .comment       0x000001b0       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isinf.o)
 .comment       0x000001c2       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libm_v4t_a_i_le_mt.a(__isnan.o)
 .comment       0x000001d4       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__pow10.o)
 .comment       0x000001e6       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libc_v4t_a_i_le_mt.a(__hex_lc_uc.o)
 .comment       0x000001f8       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_fixunsdfdi.o)
 .comment       0x0000020a       0x12 C:/Program Files/Rowley Associates Limited/CrossWorks for ARM 1.5/lib/libgccfp_v4t_a_i_le_mt.a(_floatdidf.o)

.debug_str      0x00000000       0x3a
 .debug_str     0x00000000       0x12 ARM Flash Debug/test.o
 .debug_str     0x00000012       0x21 ARM Flash Debug/pcf8833u8_lcd.o
 .debug_str     0x00000033        0x7 ARM Flash Debug/AT91SAM7.o
